Για να εφαρμόσεις το doc2vec πρέπει τα κείμενα να είναι χωρισμένα σε προτάσεις
(υπάρχουν κατάλληλες συναρτήσεις για αυτό στο πακέτο genism αλλά και στο NLTK).
Το μοντέλο doc2vec πρέπει να εκπαιδευτεί χρησιμοποιώντας όλα τα κείμενα όλων
των συγγραφέων του training corpus. Το μοντέλο δέχεται κάποιες παραμέτρους
που πρέπει να ρυθμιστούν κατάλληλα (πρέπει να δοκιμαστούν διάφορες τιμές για
να βρεθεί ο πιο κατάλληλος συνδυασμός). Αφού εκπαιδευτεί το μοντέλο doc2vec
στη συνέχεια μπορείς να το εφαρμόσεις για να κάνεις είτε αναγνώριση
(identification) είτε επαλήθευση (verification) συγγραφέα.
Στην πρώτη περίπτωση έχεις ένα πλήθος από συγγραφείς και για κάθε κείμενό
τους (είτε στο training είτε στο test corpus) δημιουργείς την doc2vec
αναπαράστασή τους. Στη συνέχεια χρησιμοποιείς κάποιον αλγόριθμο μηχανικής
μάθησης με επίβλεψη (π.χ SVM) που θα εκπαιδευτεί με το training corpus
και θα αξιολογηθεί στο test corpus.
Στην περίπτωση του verification υπάρχει μόνο ένας υποψήφιος συγγραφέας
(με κάποια γνωστά κείμενα) και ένα άγνωστο κείμενο προς διερεύνηση.
Συνενώνεις όλα τα διαθέσιμα γνωστά κείμενά του και δημιουργείς την
doc2vec αναπαράστασή τους. Κάνεις το ίδιο για το άγνωστο κείμενο και
συγκρίνεις τα διανύσματα doc2vec με κάποια συνάρτηση ομοιότητας
(π.χ. cosine similarity).


Έχω την εντύπωση ότι δεν έχεις καταλάβει κάτι σημαντικό. Υπάρχουν 2 φάσεις:
(1) η φάση της δημιουργίας του μοντέλου doc2vec.
Σε αυτή τη φάση είναι σημαντικό να είναι χωρισμένα τα κείμενα σε προτάσεις
γιατί το μοντέλο μαθαίνει να συσχετίζει
λέξεις που ανήκουν στην ίδια πρόταση.
(2) η φάση της εφαρμογής του μοντέλου όπου δέχεται ως είσοδο κείμενα και
βγάζει ένα διάνυσμα ανά κείμενο. Στη φάση αυτή δεν είναι απαραίτητο να
χωριστεί το κείμενο σε προτάσεις.
Θα πρέπει όμως να είναι χωρισμένο σε λέξεις. Συνήθως οι συναρτήσεις που
χρησιμοποιούμε (tokenizers) για
αυτό το λόγο απαιτούν να έχει χωριστεί το κείμενο σε προτάσεις. Άρα ο
χωρισμός σε προτάσεις είναι κάτι που δεν το γλυτώνεις.
Εμάς μας ενδιαφέρει να εξετάσουμε εκτός από λέξεις και ν-γράμματα χαρακτήρων.
Σε αυτήν την περίπτωση το μόνο που αλλάζει
είναι ότι δεν καλούμε τον tokenizer (για το χωρισμό σε λέξεις) αλλά δημιουργούμε
όλα τα ν-γράμματα χαρακτήρων που υπάρχουν
σε μία πρόταση. Στα ν-γράμματα χαρακτήρων συμμετέχουν όλοι οι χαρακτήρες
(σημεία στίξης, κενά, κεφαλαία-μικρά κτλ.)
